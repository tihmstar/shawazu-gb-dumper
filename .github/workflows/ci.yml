name: CI - Build on changes in Docker container

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        config: [release_rev3, release_rev2, hw_troubleshoot, release_rev3-readonly_msc]

    runs-on: ubuntu-latest
    container: 
      image: shilga/raspberry-pi-pico-gbdk-docker:v0.4

    env:
      BUILDDIR: "build_${{ matrix.config }}"

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'true'

    - name: Configure CMake
      run: |
        git config --global --add safe.directory "$GITHUB_WORKSPACE"
        CONFARGS=""
        CONF=$(echo ${{ matrix.config }} | cut -d '-' -f1)
        if echo ${{ matrix.config }} | grep -q "readonly_msc"; then
          echo "enable readonly msc"
          CONFARGS+=" -DREADONLY_MSC=1"
        fi
        if [ x"${CONF}" == "xrelease_rev2" ]; then
          echo "Build for config: REV2_LAYOUT"
          cmake --fresh -B ${{ github.workspace }}/${{ env.BUILDDIR }}_${{ matrix.config }} -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} ${CONFARGS} -DREV2_LAYOUT=1

        elif [ x"${CONF}" == "xhw_troubleshoot" ]; then
          echo "Build for config: HW_TROUBLESHOOT"
          cmake --fresh -B ${{ github.workspace }}/${{ env.BUILDDIR }}_${{ matrix.config }} -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} ${CONFARGS} -DHW_TROUBLESHOOT_BUILD=1

        else
          echo "Build for config: default"
          cmake --fresh -B ${{ github.workspace }}/${{ env.BUILDDIR }}_${{ matrix.config }} -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} ${CONFARGS}

        fi

    - name: Build
      run: |
        git config --global --add safe.directory "$GITHUB_WORKSPACE"
        make -C ${{ github.workspace }}/${{ env.BUILDDIR }}_${{ matrix.config }} -j

    - name: Archive artifacts
      uses: actions/upload-artifact@v4
      with:
        name: shawazu-gb-dumper-binaries-${{ matrix.config }}-${{ github.sha }}
        path: |
          ${{ github.workspace }}/${{ env.BUILDDIR }}_${{ matrix.config }}/*.bin
          ${{ github.workspace }}/${{ env.BUILDDIR }}_${{ matrix.config }}/*.elf
          ${{ github.workspace }}/${{ env.BUILDDIR }}_${{ matrix.config }}/*.elf.map
          ${{ github.workspace }}/${{ env.BUILDDIR }}_${{ matrix.config }}/*.hex
          ${{ github.workspace }}/${{ env.BUILDDIR }}_${{ matrix.config }}/*.uf2

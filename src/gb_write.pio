; Program name
.program gb_write
  
 set PINS, 0b011 [7] ;Clock low

.wrap_target
  pull
  out PINS, 24
  set PINS, 0b101 [9] ;clock high (2 insn left)
  set PINS, 0b011 [4] ;clock low
  SET X, 8
  MOV ISR, X
  push
.wrap

% c-sdk {
#define PIN_A0                  0
#define PIN_D0                  16
#define PIN_D7                  23
#define PIN_NRD                 26
#define PIN_NWR                 27
#define PIN_CLK                 28

static inline void gb_write_program_init(PIO pio, uint sm, uint offset) {
  pio_sm_config c = gb_write_program_get_default_config(offset);

  pio_sm_set_consecutive_pindirs(pio, sm, PIN_A0, 24, true);  //address+data is out
  sm_config_set_out_pins(&c, PIN_A0, 24);

  pio_sm_set_consecutive_pindirs(pio, sm, PIN_NRD, 3, true); //cfg is out
  sm_config_set_set_pins(&c, PIN_NRD, 3 );

  float freq = 10000000; //10MHz
  float div = (float)clock_get_hz(clk_sys) / freq;
  sm_config_set_clkdiv(&c, div);

  sm_config_set_in_shift(&c, false, false, 24);

  for (int i=0; i<23; i++){
    pio_gpio_init(pio, i);
  }
  pio_gpio_init(pio, PIN_D7);
  pio_gpio_init(pio, PIN_NRD);
  pio_gpio_init(pio, PIN_CLK);
  pio_gpio_init(pio, PIN_NWR);

  pio_sm_init(pio, sm, offset, &c);
}
%}
; Program name
.program gb_write
  
 set PINS, 0b0110 [7] ; CLK=0,~WR=1,~RD=1,~CS=0

.wrap_target
  pull
  out PINS, 24
  set PINS, 0b1011 [9] ; CLK=1,~WR=0,~RD=1,~CS=1
  set PINS, 0b0110 [4] ; CLK=0,~WR=1,~RD=1,~CS=0
  SET X, 8
  MOV ISR, X
  push
.wrap

% c-sdk {
#define PIN_A0                  0
#define PIN_D0                  16
#define PIN_D7                  23

#define PIN_CLK_v3              25
#define PIN_CS_v2               25

#define PIN_NRD                 26
#define PIN_NWR                 27

#define PIN_CLK_v2              28
#define PIN_CS_v3               28

static inline void gb_write_program_init(PIO pio, uint sm, uint offset) {
  pio_sm_config c = gb_write_program_get_default_config(offset);

  pio_sm_set_consecutive_pindirs(pio, sm, PIN_A0, 24, true);  //address+data is out
  sm_config_set_out_pins(&c, PIN_A0, 24);

  pio_sm_set_consecutive_pindirs(pio, sm, 25, 4, true); //cfg is out
  sm_config_set_set_pins(&c, 25, 4 );

  float freq = 10000000; //10MHz
  float div = (float)clock_get_hz(clk_sys) / freq;
  sm_config_set_clkdiv(&c, div);

  sm_config_set_out_shift(&c, true, false, 24);

  pio_sm_init(pio, sm, offset, &c);
}
%}